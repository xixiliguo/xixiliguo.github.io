import{_ as s,c as n,o as a,a as l}from"./app.526dca4e.js";const A=JSON.parse('{"title":"Linux: Trap","description":"","frontmatter":{"title":"Linux: Trap","date":"2021-03-20T13:45:56.000Z","draft":false},"headers":[],"relativePath":"kernel/linux-trap.md","lastUpdated":1657810449000}'),p={name:"kernel/linux-trap.md"},o=l(`<p>\u8BB0\u5F55\u4E00\u4E9B\u5173\u4E8E\u5185\u6838\u5904\u7406\u5F02\u5E38,trap\u7B49\u7684\u673A\u5236</p><h1 id="\u5185\u6838\u5173\u4E8Esegment-fault\u7684\u6253\u5370" tabindex="-1">\u5185\u6838\u5173\u4E8Esegment fault\u7684\u6253\u5370 <a class="header-anchor" href="#\u5185\u6838\u5173\u4E8Esegment-fault\u7684\u6253\u5370" aria-hidden="true">#</a></h1><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> argc</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;">argv</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">p </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0x0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2Dp\u4E3A\u7A7A\u6307\u9488, \u8BBF\u95EE\u5B83\u4F1A\u89E6\u53D1segment fault, \u7CFB\u7EDF\u65E5\u5FD7\u4F1A\u6253\u5370\u5982\u4E0B:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">[Sat Mar 20 17:12:52 2021] a.out[40342]: segfault at 0 ip 00000000004005b1 sp 00007ffc5b1be400 error 4 in a.out[400000+1000]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5BF9\u5E94x86\u7684\u5904\u7406\u4EE3\u7801:</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">printk</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%s%s[%d]: segfault at %lx ip %px sp %px error %lx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		loglvl</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> tsk</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">comm</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task_pid_nr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">tsk</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> address</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">regs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">ip</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">regs</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">sp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> error_code</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>at \u8981\u5177\u4F53\u8981\u8BBF\u95EE\u7684\u5185\u5B58\u5730\u5740<br> ip \u5F53\u524D\u7684\u6267\u884C\u6307\u4EE4\u7684\u5730\u5740. \u5373\u5BC4\u5B58\u5668<code>rip</code>\u7684\u503C<br> sp \u6808\u5730\u5740<br> error page fault\u89E6\u53D1\u540E\u751F\u6210\u7684, \u5177\u4F53\u5BF9\u5E94x86\u4E0B\u9762\u7684\u542B\u4E49\u53EF\u7528\u4EE5\u4E0B\u4EE3\u7801\u89E3\u6790.</p><div class="language-go"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * x86 Page fault error code bits:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 0 ==	 0: no page found	1: protection fault</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 1 ==	 0: read access		1: write access</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 2 ==	 0: kernel-mode access	1: user-mode access</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 3 ==				1: use of reserved bit detected</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 4 ==				1: fault was an instruction fetch</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> *   bit 5 ==				1: protection keys block access</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> errorDesc </span><span style="color:#89DDFF;">[][]</span><span style="color:#A6ACCD;">string </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[][]</span><span style="color:#C792EA;">string</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no page found</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">protection fault</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">read access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">write access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">kernel-mode access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user-mode access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">use of reserved bit detected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">use of reserved bit detected</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">protection keys block access</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	errorCode </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">14</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		desc </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> errorDesc</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">][</span><span style="color:#A6ACCD;">errorCode</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> desc </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">desc</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>in \u540E\u9762\u8DDF\u6267\u884C\u6307\u4EE4\u5F53\u524D\u4F4D\u4E8E\u54EA\u4E2A\u6587\u4EF6(\u53EF\u80FD\u662F\u4E3B\u7A0B\u5E8F\u6587\u4EF6,\u4E5F\u53EF\u80FD\u662F\u52A8\u6001\u5E93)\u548C\u8BE5\u6587\u4EF6\u5728\u5185\u5B58\u4E2D\u52A0\u8F7D\u7684\u5730\u5740</p><p>\u53C2\u8003:<br><a href="https://stackoverflow.com/questions/2549214/interpreting-segfault-messages" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/2549214/interpreting-segfault-messages</a></p>`,11),t=[o];function e(c,r,D,F,y,C){return a(),n("div",null,t)}var u=s(p,[["render",e]]);export{A as __pageData,u as default};
