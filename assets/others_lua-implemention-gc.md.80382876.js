import{_ as s,c as a,o as n,a as l}from"./app.526dca4e.js";const C=JSON.parse('{"title":"Lua\u5B9E\u73B0\u539F\u7406 - GC\u5783\u573E\u56DE\u6536","description":"","frontmatter":{"title":"Lua\u5B9E\u73B0\u539F\u7406 - GC\u5783\u573E\u56DE\u6536","author":"Peter Wang","tags":["Lua","c"],"date":"2020-09-30T13:17:14.000Z","draft":false},"headers":[],"relativePath":"others/lua-implemention-gc.md","lastUpdated":1657810449000}'),p={name:"others/lua-implemention-gc.md"},o=l(`<p>Lua\u662F\u5DF4\u897F\u4EBA\u53D1\u660E\u7684\u811A\u672C\u8BED\u8A00,\u4F5C\u8005\u79F0\u4E4B\u4E3A\u7A7F\u8FC7\u9488\u5B54\u7684\u8BED\u8A00.\u4F53\u79EF\u975E\u5E38\u5C0F\u5DE7(Lua 5.3.1\u5728Linux\u4E0B\u7F16\u8BD1\u540E\u4EC5\u4E3A546K),\u540C\u65F6\u529F\u80FD\u5F88\u5F3A\u5927(\u652F\u6301\u95ED\u5305,\u534F\u7A0B\u7B49). \u672C\u6587\u4E3B\u8981\u4ECB\u7ECD\u5B83\u7684\u5783\u573E\u56DE\u6536\u7B97\u6CD5</p><p>\u901A\u5E38\u7684\u5783\u573E\u56DE\u6536\u7B97\u6CD5\u4E3B\u8981\u6709\u4E24\u79CD, \u5F15\u7528\u8BA1\u6570\u548C\u6807\u8BB0\u6E05\u9664</p><ol><li>\u5F15\u7528\u8BA1\u6570\u4E3B\u8981\u662F\u5F53\u5BF9\u8C61\u88AB\u521B\u5EFA\u65F6\u8BA1\u6570\u4E3A1.\u4EE5\u540E\u5F53\u8BE5\u5BF9\u8C61\u518D\u6B21\u88AB\u5F15\u7528\u65F6\u5219\u8BA1\u6570\u52A01.\u5F53\u53D6\u6D88\u5F15\u7528\u65F6\u8BA1\u6570\u51CF1.\u8FD9\u6837\u5F53\u8BA1\u6570\u4E3A0\u65F6\u5219\u91CA\u653E\u5BF9\u8C61.\u8BE5\u65B9\u6CD5\u8F83\u5BB9\u6613\u7406\u89E3,\u76EE\u524DCPython\u662F\u8FD9\u6837\u5B9E\u73B0\u7684.\u4F46\u8BE5\u65B9\u6CD5\u4F1A\u9047\u5230\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898.\u6BD4\u5982A\u548CB\u90FD\u662F\u5217\u8868,A\u5305\u542BB,B\u4E5F\u540C\u65F6\u5305\u542BA.\u5373<code>A[0] = B; B[0]=A</code>.\u8FD9\u6837\u5F53\u53D6\u6D88\u5F15\u7528\u65F6,A\u548CB\u6240\u5F15\u7528\u7684\u5217\u8868\u8BA1\u6570\u4ECD\u4E3A1,\u5373\u4E0D\u4F1A\u91CA\u653E.\u4F46\u663E\u7136\u8FD9\u65F6\u9700\u8981\u91CA\u653E.CPython\u901A\u8FC7\u6807\u8BB0\u6E05\u9664\u6765\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u95EE\u9898.</li><li>\u6807\u8BB0\u6E05\u9664\u539F\u7406\u662F\u4ECE\u6839\u5F00\u59CB\u626B\u63CF(\u901A\u5E38\u6307\u5168\u5C40\u53D8\u91CF\u548C\u6808),\u53D1\u73B0\u4E00\u4E2A\u5B58\u6D3B\u5BF9\u8C61\u5219mark\u4E00\u4E0B.\u7B49\u5B8C\u6210\u626B\u63CF\u52A8\u4F5C\u540E\u6CA1\u6709mark\u7684\u5219\u4E3A\u9700\u8981\u6E05\u9664\u7684\u5BF9\u8C61.\u76F4\u63A5\u91CA\u653E.\u5C06mark\u8FC7\u7684\u5BF9\u8C61reset\u540E\u4E3A\u4E0B\u4E00\u6B21GC\u505A\u51C6\u5907.</li></ol><p>Lua 5.3.1\u4F7F\u7528\u589E\u91CF\u7684\u4E09\u8272\u6807\u8BB0\u6E05\u9664\u7684GC\u7B97\u6CD5, \u5BF9\u8C61\u521A\u88AB\u521B\u5EFA\u65F6\u9ED8\u8BA4\u6807\u8BB0\u989C\u8272\u4E3A\u767D\u8272,GC\u5177\u4F53\u6B65\u9AA4\u5982\u4E0B:</p><ol><li>\u786E\u5B9A\u6839\u90E8\u4E3A\u5168\u5C40\u53D8\u91CF(\u5185\u90E8\u662Fhash table\u5B9E\u73B0)\u548C\u5185\u90E8\u79F0\u4E4B\u4E3Atherad\u7684\u6570\u636E\u7ED3\u6784(\u5B83\u7684\u4E00\u4E2A\u6210\u5458\u6307\u5411\u4E00\u6BB5\u8FDE\u7EED\u5185\u5B58,\u5BF9\u5E94lua\u51FD\u6570\u6267\u884C\u7684\u903B\u8F91\u6808)</li><li>\u4ECE\u6839\u5F00\u59CB\u626B\u63CF, \u5982\u679C\u8BE5\u5BF9\u8C61\u5185\u90E8\u5E76\u4E0D\u5F15\u7528\u5176\u4ED6\u5BF9\u8C61,\u5219\u76F4\u63A5\u6807\u8BB0\u4E3A\u9ED1\u8272.\u5982\u679C\u8BE5\u5BF9\u8C61\u5F15\u7528\u4E86\u5176\u4ED6\u5BF9\u8C61,\u5219\u8BE5\u5BF9\u8C61\u6807\u8BB0\u4E3A\u7070\u8272\u5E76\u52A0\u5165\u7070\u8272\u94FE\u8868\u91CC(\u4F8B\u5982 <code>b = 1; a[&quot;abc&quot;] = b</code>\u5373\u554A\u5F15\u7528b, \u6B64\u65F6\u6807\u8BB0a\u4E3A\u7070\u8272).\u5F53\u626B\u63CF\u5B8C\u4E00\u904D\u540E,\u68C0\u67E5\u7070\u8272\u5217\u8868\u662F\u5426\u4E3A\u7A7A, \u4E3A\u7A7A\u5219\u8C03\u52304, \u5426\u5219\u7EE7\u7EED\u6267\u884C\u6B65\u9AA43.\u8FD9\u4E00\u6B65\u79F0\u4E4B\u4E3Amark</li><li>\u53D6\u7070\u8272\u94FE\u8868\u4E0A\u4E00\u4E2A\u5BF9\u8C61,\u9996\u5148\u8BBE\u7F6E\u4E3A\u9ED1\u8272\u5E76\u4ECE\u8BE5\u94FE\u63A5\u4E0A\u53BB\u9664,\u7136\u540E\u6309\u6B65\u9AA42\u7684\u65B9\u6CD5mark\u8FD9\u4E2A\u5BF9\u8C61\u6240\u5F15\u7528\u7684\u6240\u6709\u5BF9\u8C61.(\u8FD9\u91CC\u6709\u4E2A\u4F8B\u5916thread\u7684\u5904\u7406\u4ECD\u7136\u4E3A\u7070\u8272,\u4F1A\u653E\u5165\u53E6\u4E00\u4E2A\u7070\u8272\u94FE\u63A5,\u6682\u7EAA\u59D4grayagain), \u8FD9\u6B65\u79F0\u4E4B\u4E3Atraverse, \u5FAA\u73AF\u63D0\u53D6\u5BF9\u8C61traverse\u76F4\u5230\u7070\u8272\u94FE\u63A5\u8868\u4E3A\u7A7A</li><li>\u68C0\u67E5grayagain\u662F\u5426\u4E3A\u7A7A,\u4E0D\u4E3A\u7A7A\u5219\u7EE7\u7EED\u6309\u6B65\u9AA43\u7684\u539F\u5219\u7EE7\u7EEDtraverse, \u76F4\u5230\u4E3A\u7A7A.\u5199\u5C4F\u969C\u751F\u6210\u7684\u7070\u8272\u5BF9\u8C61\u4F1A\u653E\u5728grayagain\u91CC</li><li>\u6B64\u65F6\u6CA1\u6709\u989C\u8272\u4E3A\u7070\u8272\u7684\u5BF9\u8C61, GC\u8FDB\u5165sweep\u9636\u6BB5,\u7CFB\u7EDF\u5F00\u59CB\u628A\u6807\u8BB0\u4E3A\u9ED1\u8272\u7684\u8F6C\u6362\u4E3A\u767D\u8272,\u5C06\u5F53\u524D\u767D\u8272\u7684\u5BF9\u8C61(\u5373\u672Amark\u5230\u7684\u5BF9\u8C61)\u5168\u90E8\u91CA\u653E\u6389.</li><li>reset\u76F8\u5173\u72B6\u6001,\u7B49\u4E0B\u4E00\u4E2AGC\u7684\u89E6\u53D1\u6761\u4EF6\u8FBE\u5230\u65F6\u5019\u7EE7\u7EED\u6309\u6B65\u9AA41\u8FDB\u884C. lua\u9ED8\u8BA4\u5F53\u524D\u5185\u5B58\u7533\u8BF7\u7684\u5927\u5C0F\u4E3A\u4E0A\u6B21GC\u540E\u5B58\u6D3B\u7684\u6240\u6709\u5BF9\u8C61\u5927\u5C0F\u76842\u500D\u65F6\u542F\u52A8next GC</li></ol><p>\u5982\u679C\u4E0A\u8FF0\u6B65\u9AA4\u8FDE\u7EED\u4E00\u6B21\u6027\u8FD0\u884C,\u8FD9\u6837\u4F1A\u5BFC\u81F4STW(stop the world)\u5F88\u957F, Lua\u5B9E\u73B0\u6BD4\u8F83\u5DE7\u5999, \u4E00\u6B21\u53EA\u505A\u4E00\u70B9. \u6BD4\u5982\u5728\u6B65\u9AA43\u91CC\u6309\u6BCF\u4E2A\u5BF9\u8C61\u7684\u5927\u5C0F\u4F5C\u4E3A\u53C2\u8003\u503C.Traverse\u4E00\u5B9A\u91CF\u540E\u505C\u6B62GC\u64CD\u4F5C,\u7EE7\u7EED\u6267\u884CLua\u5B57\u8282\u7801\u7684\u64CD\u4F5C. \u4E0B\u6B21Check\u65F6\u7EE7\u7EED\u8FD0\u884C, \u8FBE\u5230\u4E00\u5B9A\u91CF\u518D\u6B21\u56DE\u5230Lua\u5B57\u8282\u7801\u7684\u6267\u884C. \u8FD9\u6837STW\u4E2D\u65AD\u65F6\u95F4\u5F88\u77ED,\u63D0\u9AD8\u4E86\u7A0B\u5E8F\u54CD\u5E94\u65F6\u95F4,\u8FD9\u662F\u79F0\u4E4B\u4E3A\u589E\u91CFGC\u7684\u539F\u56E0.</p><p>\u8FD9\u6837GC\u548C\u7A0B\u5E8F\u903B\u8F91\u4EA4\u9519\u8FD0\u884C\u4F1A\u5F15\u5165\u4E00\u4E2A\u95EE\u9898,\u5BF9\u8C61A\u662Fhash table\u5728\u4E00\u6B21GC\u4E2D\u5DF2\u7ECF\u6807\u8BB0\u4E3A\u9ED1\u8272,\u7D27\u63A5\u7740\u6267\u884C\u4E1A\u52A1\u903B\u8F91<code>A[&quot;abc&quot;] = B</code>.\u5047\u8BBEB\u5BF9\u8C61\u4E3A\u767D\u8272,\u6309\u56E0\u5BF9\u8C61A\u5DF2\u7ECF\u662F\u9ED1\u8272,\u6240\u6709\u6C38\u8FDC\u4E0D\u4F1A\u626B\u63CF\u5230B, \u5219\u53EF\u80FD\u51FA\u73B0\u88AB\u610F\u5916\u91CA\u653E\u7684\u98CE\u9669. \u5199\u5C4F\u969C\u662F\u7528\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684.\u5F53\u6267\u884C\u64CD\u4F5C\u7801<code>OP_SETLIST</code>\u65F6,\u4E3A\u952E\u8D4B\u65B0\u503C\u540E\u90FD\u8981\u6267\u884C\u5B8F\u5B9A\u4E49<code>LuaC_barrierback</code>, \u5F53hash table \u4E3A\u9ED1, \u503C\u4E3A\u767D\u65F6,\u5219\u5C06hash table\u7531\u9ED1\u8F6C\u4E3A\u7070, \u653E\u5230grayagain\u94FE\u8868\u91CC,\u4F1A\u5728\u6B65\u9AA44\u91CC\u91CD\u65B0traverse\u4E00\u904D<br> \u4E5F\u6B63\u662F\u4EA4\u9519\u8FD0\u884C\u7684\u539F\u56E0, \u5DF2\u7ECF\u626B\u63CF\u8FC7\u7684\u903B\u8F91\u6808\u548C\u9A6C\u4E0A\u8981\u8FDB\u5165sweep\u9636\u6BB5\u7684\u903B\u8F91\u6808\u80AF\u5B9A\u4E0D\u4E00\u6837\u4E86. \u8FD9\u5C31\u662Fthread\u6807\u8BB0\u4E3A\u7070\u8272,\u653E\u5165grayagain\u7684\u539F\u56E0, \u5728\u8FDB\u5165sweep\u524D\u6267\u884C\u4E00\u4E2A\u4E0D\u53EF\u88AB\u4E1A\u52A1\u903B\u8F91\u6253\u65AD\u7684\u539F\u5B50\u64CD\u4F5C, \u91CD\u65B0mark&amp;traverse\u4E00\u4E0B</p><p>\u5728Lua\u5DE8\u5927\u7684\u865A\u62DF\u673A\u91CC,\u5F53\u6267\u884C<code>OP_NEWTABLE</code>,<code>OP_CONCAT</code>,<code>OP_CLOSURE</code>\u65F6\u6267\u884C\u5B8F<code>checkGC(L, ra + 1)</code>,\u5C55\u5F00\u5982\u4E0B,\u4E3B\u8981\u662F\u8C03\u7528\u4E86<code>luaC_step</code>\u8FD9\u4E2A\u51FD\u6570</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">checkGC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">Protect</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_condGC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,{</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* limit of live values */</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#82AAFF;">luaC_step</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">                          </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ci</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">;})</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* restore top */</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">           </span><span style="color:#82AAFF;">luai_threadyield</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*\u53EA\u6709\u5F53debt\u5927\u4E8E0\u65F6\u624D\u6B63\u662F\u5F00\u59CB\u6267\u884CGC,\u5728\u5B9E\u9645\u8FD0\u884C\u65F6,\u6B64\u503C\u901A\u5E38\u5C0F\u4E8E\u8D1F\u7684\u4E00\u4E2A\u6B65\u957F, \u968F\u7740\u65B0\u5BF9\u8C61\u7684\u521B\u5EFA,\u8FBE\u5230\u4E00\u4E2A\u6B65\u957F\u65F6,\u5219\u542F\u52A8GC */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_condGC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">c</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">G</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">GCdebt</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">;};</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">condchangemem</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);}</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_checkGC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">luaC_condGC</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_step</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">);)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** performs a basic GC step when collector is running</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_step</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  global_State </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">g </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">G</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  l_mem debt </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getdebt</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* GC deficit (be paid now) */</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/*\u6240\u6709\u65B0\u521B\u5BF9\u8C61\u90FD\u4F1A\u589E\u52A0debt\u7684\u503C*/</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcrunning</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* not running? */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">luaE_setdebt</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">GCSTEPSIZE </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* avoid being called too often */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* repeat until pause or enough &quot;credit&quot; (negative debt) */</span></span>
<span class="line"><span style="color:#F07178;">    lu_mem work </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">singlestep</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* perform one single step */</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*work\u4EE3\u8868\u5355\u6B21step(mark\u6216\u8005sweep)\u7684\u6210\u672C*/</span></span>
<span class="line"><span style="color:#F07178;">    debt </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> work</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">debt </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;">GCSTEPSIZE </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> GCSpause</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> GCSpause</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setpause</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* pause until next cycle */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    debt </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">debt </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstepmul</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> STEPMULADJ</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* convert &#39;work units&#39; to Kb */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">luaE_setdebt</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> debt</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">runafewfinalizers</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>singlestep\u51FD\u6570\u7528\u6765\u63A7\u5236GC\u5185\u90E8\u72B6\u6001\u8FC7\u7A0B\u7684\u8FC1\u79FB</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> lu_mem </span><span style="color:#82AAFF;">singlestep</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  global_State </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">g </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">G</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">switch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSpause</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GCmemtrav</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">strt</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">size</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">GCObject</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">restartcollection</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*\u542F\u52A8GC,\u5E76mark\u6839\u90E8(\u5168\u5C40\u53D8\u91CF\u8868\u548C\u5185\u90E8\u7684thread(\u53C8\u79F0\u534F\u7A0B, \u6BCF\u4E2A\u534F\u7A0B\u6709\u81EA\u5DF1\u7684\u72EC\u7ACB\u903B\u8F91\u6808))*/</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> GCSpropagate</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GCmemtrav</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/*\u8FD4\u56DEwork\u6210\u672C,\u7528\u4E8E\u589E\u91CFGC\u63A7\u5236*/</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSpropagate</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GCmemtrav</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">lua_assert</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gray</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">propagatemark</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">     </span><span style="color:#676E95;font-style:italic;">/*Traverse\u7070\u8272\u94FE\u8868\u4E2D\u7684\u4E00\u4E2A\u5BF9\u8C61*/</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gray</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* no more gray objects? */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> GCSatomic</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* finish propagate phase */</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*\u5F53\u7070\u8272\u94FE\u63A5\u4E2D\u6CA1\u6709\u5BF9\u8C61\u540E,\u8FC1\u79FB\u5230\u4E0B\u4E00\u4E2A\u72B6\u6001*/</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GCmemtrav</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* memory traversed in this step */</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/*\u8FD4\u56DEwork\u6210\u672C,\u7528\u4E8E\u589E\u91CFGC\u63A7\u5236*/</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSatomic</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      lu_mem work</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> sw</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">propagateall</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* make sure gray list is empty */</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/*\u518D\u6B21\u68C0\u67E5\u7070\u8272\u94FE\u8868\u662F\u5426\u8FD8\u6709\u5BF9\u8C61*/</span></span>
<span class="line"><span style="color:#F07178;">      work </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">atomic</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* work is what was traversed by &#39;atomic&#39; */</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/*\u8FD9\u5757\u64CD\u4F5C\u662F\u4E0D\u53EF\u4E2D\u65AD\u7684,\u4E3B\u8981\u662F\u5C06\u4E00\u4E9B\u5199\u5C4F\u969C\u5BFC\u81F4\u7684\u7070\u8272\u5BF9\u8C61\u7EE7\u7EEDtraverse*/</span></span>
<span class="line"><span style="color:#F07178;">      sw </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">entersweep</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GCestimate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">gettotalbytes</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* first estimate */</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> work </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> sw </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> GCSWEEPCOST</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSswpallgc</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* sweep &quot;regular&quot; objects */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sweepstep</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> GCSswpfinobj</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">finobj</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSswpfinobj</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* sweep objects with finalizers */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sweepstep</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> GCSswptobefnz</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">tobefnz</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSswptobefnz</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* sweep objects to be finalized */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sweepstep</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> GCSswpend</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCSswpend</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* finish sweeps */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">makewhite</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mainthread</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* sweep main thread */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">checkSizes</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> g</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> GCScallfin</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">case</span><span style="color:#F07178;"> GCScallfin</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* call remaining finalizers */</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">tobefnz</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gckind</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> KGC_EMERGENCY</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">runafewfinalizers</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> GCFINALIZECOST</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* emergency mode or no more finalizers */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">gcstate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> GCSpause</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* finish collection */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">lua_assert</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5199\u5C4F\u969C\u7684\u5177\u4F53\u76F8\u5173\u51FD\u6570</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#82AAFF;">vmcase</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">OP_SETLIST</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GETARG_B</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> c </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GETARG_C</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        Table </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast_int</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> ra</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">c </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">lua_assert</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">GET_OPCODE</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">ci</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">l</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">savedpc</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> OP_EXTRAARG</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          c </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GETARG_Ax</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">ci</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">l</span><span style="color:#F07178;">.</span><span style="color:#A6ACCD;">savedpc</span><span style="color:#89DDFF;">++);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">luai_runtimecheck</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ttistable</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ra</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">        h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">hvalue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ra</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        last </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)*</span><span style="color:#F07178;">LFIELDS_PER_FLUSH</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">last </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">h</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">sizearray</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* needs more space? */</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">luaH_resizearray</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* pre-allocate it at once */</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(;</span><span style="color:#F07178;"> n </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> n</span><span style="color:#89DDFF;">--)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          TValue </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">val </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> ra</span><span style="color:#89DDFF;">+</span><span style="color:#F07178;">n</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">luaH_setint</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> last</span><span style="color:#89DDFF;">--,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">luaC_barrierback</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> val</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ci</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* correct top (in case of previous open call) */</span></span>
<span class="line"><span style="color:#F07178;">        vmbreak</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_barrierback</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">iscollectable</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">isblack</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">iswhite</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">gcvalue</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">v</span><span style="color:#89DDFF;">)))</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">luaC_barrierback_</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** barrier that moves collector backward, that is, mark the black object</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** pointing to a white object as gray again.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaC_barrierback_</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Table </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  global_State </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">g </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">G</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">lua_assert</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">isblack</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#82AAFF;">isdead</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">g</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> t</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">black2gray</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* make table gray (again) */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">linkgclist</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">g</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">grayagain</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,13),e=[o];function t(c,F,r,y,D,i){return n(),a("div",null,e)}var g=s(p,[["render",t]]);export{C as __pageData,g as default};
