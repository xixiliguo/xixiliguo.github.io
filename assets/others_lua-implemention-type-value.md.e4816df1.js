import{_ as s,c as n,o as a,a as l}from"./app.526dca4e.js";const C=JSON.parse('{"title":"Lua\u5B9E\u73B0\u539F\u7406 - \u7C7B\u578B\u4E0E\u503C","description":"","frontmatter":{"title":"Lua\u5B9E\u73B0\u539F\u7406 - \u7C7B\u578B\u4E0E\u503C","author":"Peter Wang","tags":["Lua","c"],"date":"2020-09-27T13:17:14.000Z","draft":false},"headers":[],"relativePath":"others/lua-implemention-type-value.md","lastUpdated":1657810449000}'),p={name:"others/lua-implemention-type-value.md"},o=l(`<p>Lua\u662F\u5DF4\u897F\u4EBA\u53D1\u660E\u7684\u811A\u672C\u8BED\u8A00,\u4F5C\u8005\u79F0\u4E4B\u4E3A\u7A7F\u8FC7\u9488\u5B54\u7684\u8BED\u8A00.\u4F53\u79EF\u975E\u5E38\u5C0F\u5DE7(Lua 5.3.1\u5728Linux\u4E0B\u7F16\u8BD1\u540E\u4EC5\u4E3A546K),\u540C\u65F6\u529F\u80FD\u5F88\u5F3A\u5927(\u652F\u6301\u95ED\u5305,\u534F\u7A0B\u7B49).<br> \u672C\u6587\u4E3B\u8981\u4ECB\u7ECD\u5B83\u7684\u503C\u5B9E\u73B0\u65B9\u5F0F</p><p>Lua\u7684\u865A\u62DF\u673A\u81EA5.0\u540E\u662F\u865A\u62DF\u673A\u8FD0\u884C\u662F\u57FA\u4E8E\u5BC4\u5B58\u5668\u7684.\u5176\u4ED6\u5927\u90E8\u5206\u89E3\u91CA\u6027\u8BED\u8A00\u90FD\u662F\u57FA\u4E8E\u6808\u7684(Python,Java).Lua\u5168\u90E8\u91C7\u7528C\u8BED\u8A00\u7F16\u5199,\u53EF\u5728\u591A\u4E2A\u5E73\u53F0\u4E0B\u7F16\u8BD1\u901A\u8FC7.\u4F5C\u4E3A\u4E00\u4E2A\u5D4C\u5165\u5F0F\u7684\u8BED\u8A00,\u5E38\u4F5C\u4E3A\u5927\u578B\u7A0B\u5E8F\u7684\u63D2\u4EF6\u4F7F\u7528(\u6BD4\u5982Wireshark,Redis).<br> Lua\u548C\u5176\u4ED6\u89E3\u91CA\u6027\u8BED\u8A00\u4E00\u6837,\u5148\u5C06\u539F\u6587\u4EF6\u7F16\u8BD1\u4E3A\u5B57\u8282\u7801.\u5373\u4E00\u79CD\u865A\u62DF\u673A\u53EF&quot;\u8BFB\u61C2&quot;\u7684\u6570\u636E\u5F62\u5F0F.\u7136\u540E\u865A\u62DF\u673A\u5FAA\u73AF\u8BFB\u53D6\u6BCF\u4E2A\u5B57\u8282\u7801,\u5E76\u6267\u884C\u76F8\u5E94\u7684\u64CD\u4F5C.<br> \u6587\u4E2D\u6240\u6709\u4EE3\u7801\u90FD\u6307Lua 5.3.1,OS\u73AF\u5883\u4E3ACentOS7,\u540C\u65F6\u4F8B\u5B50\u4E2D\u7684\u4EE3\u7801\u505A\u4E86\u589E\u51CF,\u5C06\u5B8F\u5C55\u5F00\u6216\u8005\u5220\u9664\u6389\u4E00\u4E9B\u4E0E\u6240\u8BB2\u5185\u5BB9\u5173\u7CFB\u4E0D\u5927\u7684\u4EE3\u7801.</p><p>\u503C\u4E0E\u7C7B\u578B \u5728Lua\u91CC\u7684\u603B\u5171\u5B9E\u73B0\u4E869\u79CD\u7C7B\u578B,\u5177\u4F53\u5982\u4E0B\uFF1A</p><table><thead><tr><th style="text-align:left;">\u7C7B\u578B</th><th style="text-align:left;">\u542B\u4E49</th></tr></thead><tbody><tr><td style="text-align:left;">nil</td><td style="text-align:left;">\u4EE3\u8868\u4E00\u4E2A\u503C\u4E0D\u5B58\u5728</td></tr><tr><td style="text-align:left;">boolean</td><td style="text-align:left;">\u4EE3\u8868\u903B\u8F91\u5224\u65AD\u7684\u7ED3\u679C \u5305\u62ECtrue,false\u4E24\u4E2A\u503C</td></tr><tr><td style="text-align:left;">number</td><td style="text-align:left;">\u4EE3\u8868\u6570\u5B57\uFF0C\u53EF\u4EE5\u662F\u6574\u6570,\u4E5F\u53EF\u4EE5\u662F\u6D6E\u70B9\u6570.</td></tr><tr><td style="text-align:left;">lightuserdata</td><td style="text-align:left;">\u4EE3\u8868\u8F7B\u578B\u7528\u6237\u6570\u636E\uFF0C\u5B83\u7B80\u5355\u5730\u6307\u5411\u4E00\u4E2AC\u6307\u9488</td></tr><tr><td style="text-align:left;">userdata</td><td style="text-align:left;">\u4EE3\u8868\u5B8C\u5168\u7528\u6237\u6570\u636E\uFF0C\u5B83\u53EF\u4EE5\u901A\u8FC7\u5143\u8868\u5B9A\u4E49\u8BB8\u591A\u64CD\u4F5C.</td></tr><tr><td style="text-align:left;">string</td><td style="text-align:left;">\u4EE3\u8868\u5B57\u7B26\u4E32</td></tr><tr><td style="text-align:left;">table</td><td style="text-align:left;">\u4EE3\u8868hash\u8868\u548C\u5217\u8868\uFF0C \u8FD9\u5757Lua\u8BBE\u8BA1\u5F97\u76F8\u5F53\u53D6\u5DE7,\u7528\u4E00\u79CD\u7C7B\u578B\u540C\u65F6\u652F\u6301Python\u91CC\u7684dict(\u8868\u793A\u952E\u503C\u5BF9)\u548CPython\u91CC\u7684list(\u6570\u7EC4).</td></tr><tr><td style="text-align:left;">function</td><td style="text-align:left;">\u4EE3\u8868Lua\u548CC\u8BED\u8A00\u91CC\u7684\u51FD\u6570</td></tr><tr><td style="text-align:left;">thread</td><td style="text-align:left;">\u4EE3\u8868Lua\u5185\u90E8\u5B9E\u73B0\u7684\u534F\u7A0B\u3002 \u5B83\u5E76\u4E0D\u662FOS\u7684\u539F\u751F\u7EBF\u7A0B, \u5B83\u4EE3\u8868\u4E86\u4E00\u7EC4\u6267\u884C\u5E8F\u5217. \u865A\u62DF\u673A\u7684\u5B57\u8282\u7801\u6267\u884C\u5C31\u662F\u5728\u5B83\u7684\u6808\u4E0A</td></tr></tbody></table><p>\u5728\u89E3\u91CA\u6027\u8BED\u8A00\u91CC, \u503C\u7684\u5B9E\u73B0\u4E0A\u662F\u81EA\u5E26\u7C7B\u578B\u7684. \u4F8B\u5982 <code>a = 10</code> \u8FD9\u6837\u7684\u8BED\u53E5\u8868\u793A\u5C06number\u7C7B\u578B\u7684\u503C\u4E3A10\u7684\u5BF9\u8C61\u7ED1\u5B9A\u5230a\u4E0A. \u4E0EC\u8FD9\u79CD\u9759\u6001\u8BED\u8A00\u4E0D\u540C\uFF0C\u53D8\u91CF\u540D\u53EA\u662F\u4E00\u4E2A\u540D\u5B57, \u5B83\u53EF\u4EE5\u901A\u8FC7<code>=</code>\u548C\u4EFB\u610F\u7C7B\u578B\u7684\u5BF9\u8C61\u7ED1\u5B9A\u3002<br> \u5982\u4E0B\u662FLua\u4E2D\u5BF9\u8C61\u7684\u7ED3\u6784\u5B9A\u4E49. \u6240\u6709\u5BF9\u8C61\u90FD\u7528\u8FD9\u4E2A\u7ED3\u6784\u4F53\u8868\u793A.</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> lua_TValue </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  Value value_</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> tt_</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> TValue</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">union</span><span style="color:#A6ACCD;"> Value </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  GCObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">gc</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/* collectable objects */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">         </span><span style="color:#676E95;font-style:italic;">/* light userdata */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">           </span><span style="color:#676E95;font-style:italic;">/* booleans */</span></span>
<span class="line"><span style="color:#F07178;">  lua_CFunction f</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">/* light C functions */</span></span>
<span class="line"><span style="color:#F07178;">  lua_Integer i</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">/* integer numbers */</span></span>
<span class="line"><span style="color:#F07178;">  lua_Number n</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">    </span><span style="color:#676E95;font-style:italic;">/* float numbers */</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* \u4F7F\u7528 union \u53EF\u4EE5\u8282\u7701\u7A7A\u95F4,\u56E0\u4E3A\u8FD9\u51E0\u4E2A\u5B57\u6BB5\u4E0D\u53EF\u80FD\u540C\u65F6\u6709\u6548 */</span></span>
<span class="line"></span></code></pre></div><p>\u5176\u4E2D<code>tt_</code>\u5B57\u6BB5\u5305\u542B\u4E86\u7C7B\u578B\u4FE1\u606F. \u4F4E\u4F4D0\u52303\u4EE3\u8868\u4E86\u7C7B\u578B. 4,5\u4F4D\u5219\u5BF9\u7C7B\u578B\u7EC6\u5206. \u6BD4\u5982\u5B57\u7B26\u4E32\u91CC\u53C8\u5206\u4E3A\u77ED\u5B57\u7B26\u4E32\u548C\u957F\u5B57\u7B26\u4E32. \u6BD4\u5982function\u8FD9\u4E2A\u7C7B\u578B\u53EF\u5206\u4E3Ac\u51FD\u6570, Lua\u95ED\u5305\u548CC\u95ED\u5305. \u4ED6\u4EEC\u5404\u81EA\u7684\u8C03\u7528\u65B9\u5F0F\u6216\u8005\u884C\u4E3A\u90FD\u4E0D\u540C, \u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\u53EF\u4EE5\u8FDB\u4E00\u6B65\u505A\u4F18\u5316.<br> \u7B2C6\u4F4D\u8868\u793A\u8BE5\u503C\u662F\u5426\u7531GC\u7BA1\u7406. \u7528\u6237\u6570\u636E,boolean,c function,\u6574\u6570\u6216\u8005\u6D6E\u70B9\u6570\u53EF\u4EE5\u76F4\u63A5\u8868\u793A, \u5176\u4ED6\u5982string, table\u9700\u8981GC\u7BA1\u7406. \u76F8\u6BD4Python\u4E0B\u662F\u6240\u6709\u7684\u7C7B\u578B\u90FD\u53D7GC\u7BA1\u7406, Lua\u5219\u505A\u4E86\u4F18\u5316.\u8FD9\u6837GC\u538B\u529B\u5C0F,\u81EA\u7136\u6027\u80FD\u597D.</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** basic types</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TNIL</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TBOOLEAN</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TLIGHTUSERDATA</span><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TNUMBER</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TSTRING</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TTABLE</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TFUNCTION</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">6</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TUSERDATA</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">7</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TTHREAD</span><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** tags for Tagged Values have the following use of bits:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** bits 0-3: actual tag (a LUA_T* value)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** bits 4-5: variant bits</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** bit 6: whether value is collectable</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** LUA_TFUNCTION variants:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** 0 - Lua function</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** 1 - light C function</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** 2 - regular C function (closure)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* Variant tags for functions */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TLCL</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TFUNCTION </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* Lua closure */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TLCF</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TFUNCTION </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* light C function */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TCCL</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TFUNCTION </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* C closure */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* Variant tags for strings */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TSHRSTR</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TSTRING </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* short strings */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TLNGSTR</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TSTRING </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* long strings */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* Variant tags for numbers */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TNUMFLT</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TNUMBER </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* float numbers */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LUA_TNUMINT</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LUA_TNUMBER </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* integer numbers */</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* Bit mark for collectable types */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BIT_ISCOLLECTABLE</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p><code>TValue</code>\u901A\u8FC7\u5B57\u6BB5<code>tt_</code>\u5B57\u6BB5\u53EF\u77E5\u9053\u5176\u578B, \u5982\u679C\u662F<code>booleans</code>, \u5219\u76F4\u63A5\u53D6<code>TValue.b</code>. \u5982\u679C\u662F<code>light c function</code>,\u5219\u53D6<code>TValue.f</code>. \u5982\u679C\u662FGC\u7BA1\u7406\u7684\u5BF9\u8C61, \u5219\u9700\u8981\u901A\u8FC7\u5982\u4E0B\u5B8F\u5C06\u7C7B\u578B\u4E3AGCObject\u6307\u9488\u663E\u6027\u8F6C\u6362\u4E3A\u76F8\u5E94\u7C7B\u578B\u7684\u6307\u9488. \u6BD4\u5982\u5B57\u7B26\u4E32\u7684\u7ED3\u6784\u4E3A<code>struct TString</code>, \u5F53\u524D\u6709\u4E2A<code>TValue</code>\u7684\u6307\u9488p. \u901A\u8FC7<code>p-&gt;tt_</code>\u5224\u65AD\u8BE5\u503C\u662F\u5B57\u7B26\u4E32, \u5219<code>GCUnion*(p-&gt;value_.gc)-&gt;ts</code> \u5219\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u6307\u5411 struct TString\u7ED3\u6784\u7684\u6307\u9488. \u5F53\u7136\u4E5F\u53EF\u4EE5\u5C06\u65B0\u751F\u6210\u7684<code>struct TString</code>\u7ED3\u6784\u7684\u6307\u9488\u8F6C\u6362\u4E3A<code>GCObject</code>\u7ED3\u6784\u7684\u6307\u9488, \u653E\u5165<code>TValue</code></p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> Common Header </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> all collectable </span><span style="color:#82AAFF;">objects</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">in macro form</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> to be</span></span>
<span class="line"><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;"> included in other objects</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CommonHeader</span><span style="color:#A6ACCD;">	GCObject </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> lu_byte tt</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> lu_byte marked</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Common type has only the common header</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> GCObject </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  CommonHeader</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> GCObject</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Union of all collectable objects (only for conversions)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">union</span><span style="color:#A6ACCD;"> GCUnion </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  GCObject gc</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* common header */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> TString ts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> Udata u</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">union</span><span style="color:#F07178;"> Closure cl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> Table h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> Proto p</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> lua_State th</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* thread */</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> exp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">)(</span><span style="color:#A6ACCD;">exp</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast_u</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">union</span><span style="color:#A6ACCD;"> GCUnion </span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* macros to convert a GCObject into a specific value */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">gco2ts</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">check_exp</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">novariant</span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">tt</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> LUA_TSTRING</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;((</span><span style="color:#82AAFF;">cast_u</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">o</span><span style="color:#89DDFF;">))-&gt;</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/* macro to convert a Lua object into a GCObject */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">obj2gco</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">check_exp</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">novariant</span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">tt</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> LUA_TDEADKEY</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(&amp;(</span><span style="color:#82AAFF;">cast_u</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">gc</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"></span></code></pre></div><p>\u5B57\u7B26\u4E32\u5728Lua\u91CC\u4E5F\u662Fzero-terminated\u7684. \u6240\u4EE5\u53EF\u4EE5\u5229\u7528c\u6807\u51C6\u5E93\u7684\u5404\u79CD\u5B57\u7B26\u4E32\u64CD\u4F5C\u51FD\u6570.</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Header for string value; string bytes follow the end of this structure</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** (aligned according to &#39;UTString&#39;; see next).</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">CommonHeader</span><span style="color:#A6ACCD;">	GCObject </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> lu_byte tt</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> lu_byte marked</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> TString </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  CommonHeader</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  lu_byte extra</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* reserved words for short strings; &quot;has hash&quot; for longs */</span></span>
<span class="line"><span style="color:#F07178;">  lu_byte shrlen</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* length for short strings */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> hash</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">union</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> lnglen</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* length for long strings */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> TString </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">hnext</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* linked list for hash table */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> u</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> TString</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Ensures that address after this type is always fully aligned.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">union</span><span style="color:#A6ACCD;"> UTString </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L_Umaxalign dummy</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* ensures maximum alignment for strings */</span></span>
<span class="line"><span style="color:#F07178;">  TString tsv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> UTString</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>\u5B57\u7B26\u4E32\u957F\u5EA6\u6709\u4E13\u95E8\u7684\u5B57\u6BB5. \u8FD9\u6837\u53D6\u957F\u5EA6\u65F6\u5C31\u5F88\u5FEB. \u4E0D\u7528\u518D\u8BA1\u7B97. \u5982\u4E0B\u4EE3\u7801\u53EF\u4EE5\u770B\u5230,\u771F\u6B63\u50A8\u5B58\u5B57\u7B26\u7684\u6570\u636E\u5E76\u4E0D\u662F\u7D27\u8DDF\u5728struct TString\u540E. \u8FD9\u662F\u4E3A\u4E86\u4FDD\u8BC1\u6307\u5411\u7B2C\u4E00\u4E2A\u5B57\u7B26\u7684\u6307\u9488\u662F\u5BF9\u9F50\u7684. \u53C2\u89C1\u4E0A\u9762\u7684\u7ED3\u6784\u4F53 union UTString</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> exp</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">t</span><span style="color:#89DDFF;">)(</span><span style="color:#A6ACCD;">exp</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Get the actual string (array of bytes) from a &#39;TString&#39;.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** (Access to &#39;extra&#39; ensures that value is really a &#39;TString&#39;.)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getaddrstr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">))</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#A6ACCD;">UTString</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getstr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;">  \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">check_exp</span><span style="color:#89DDFF;">(sizeof((</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">extra</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getaddrstr</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** creates a new string object</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> TString </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">createstrobj</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> l</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                              </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> tag</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> h</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  TString </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">ts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  GCObject </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">o</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> totalsize</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* total size of TString object */</span></span>
<span class="line"><span style="color:#F07178;">  totalsize </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sizelstring</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  o </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">luaC_newobj</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> tag</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> totalsize</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  ts </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">gco2ts</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">o</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">hash</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">extra</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">memcpy</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">getaddrstr</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ts</span><span style="color:#89DDFF;">),</span><span style="color:#F07178;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">getaddrstr</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ts</span><span style="color:#89DDFF;">)[</span><span style="color:#F07178;">l</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* ending 0 */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> ts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u91CCLua\u5BF9\u77ED\u5B57\u7B26\u505A\u4E86\u4F18\u5316\u5904\u7406. \u5982\u679C\u9700\u8981\u751F\u6210\u7684\u5B57\u7B26\u4E32\u957F\u5EA6\u5C0F\u4E8E\u6216\u8005\u7B49\u4E8E40(\u53EF\u5728\u7F16\u8BD1\u65F6\u8C03\u6574), \u5219\u8BE5\u5B57\u7B26\u4E32\u5C5E\u4E8E\u77ED\u5B57\u7B26\u4E32.Lua\u91CC\u6240\u6709\u7684\u77ED\u5B57\u7B26\u4E32\u90FD\u4FDD\u5B58\u5728\u4E00\u4E2A\u57FA\u4E8E\u94FE\u8868\u7684\u54C8\u5E0C\u8868\u91CC. \u8FD9\u6837\u5F53\u65B0\u521B\u5EFA\u4E00\u4E2A\u77ED\u5B57\u7B26\u4E32\u65F6,\u5148\u68C0\u67E5\u8BE5\u8868\u6709\u6CA1\u6709.\u6709\u5C31\u76F4\u63A5\u5229\u7528,\u8FD4\u56DE\u8868\u4E2D\u7684\u5B57\u7B26\u6307\u9488. \u6CA1\u6709\u5219\u65B0\u5EFA\u5E76\u653E\u5165\u8BE5\u54C8\u5E0C\u8868. \u65B0\u7684short string\u56E0\u4E3A\u8981\u653E\u5165\u5230\u54C8\u5E0C\u8868\u91CC,\u6240\u4EE5\u987A\u5E26hash\u8FC7\u4E86. long string\u5728\u65B0\u5EFA\u65F6\u4E3A\u52A0\u901F\u5E76\u6CA1\u6709\u7ACB\u5373hash. \u7B49\u4EE5\u540E\u6709\u9700\u8981\u65F6\u518D\u8BA1\u7B97 \u5224\u65AD\u4E24\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u76F8\u7B49\u65F6,\u5219\u5F88\u7B80\u5355: \u4E00\u4E2Ashort,\u4E00\u4E2Along\u5219\u4E0D\u540C. \u90FD\u662Fshort\u65F6,\u76F4\u63A5\u6BD4\u6307\u9488\u5730\u5740\u5373\u53EF(\u56E0\u4E3A\u6240\u6709short string\u5728\u7CFB\u7EDF\u4E2D\u53EA\u5B58\u5728\u4E00\u4EFD) \u90FD\u662Flong\u65F6,\u5219\u5BF9\u6BD4\u957F\u5EA6, \u5148\u7528memcmp\u6BD4\u8F83</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** new string (with explicit length)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">TString </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;">luaS_newlstr</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> l</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> LUAI_MAXSHORTLEN</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* short string? */</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">internshrstr</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    TString </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">ts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">MAX_SIZE </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">TString</span><span style="color:#89DDFF;">))/sizeof(</span><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">luaM_toobig</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    ts </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">createstrobj</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> str</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> LUA_TLNGSTR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">G</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#A6ACCD;">seed</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">ts</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">u</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">lnglen</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> ts</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>hash\u8BA1\u7B97\u65F6\u9700\u8981seed. \u5F53\u8FDB\u7A0B\u8FD0\u884C\u65F6,\u4F1A\u751F\u6210\u5982\u4E0B\u7684\u8FD0\u7B97\u751F\u6210\u4E00\u4E2A\u968F\u673A\u6570\u4F5C\u4E3A\u79CD\u5B50. \u8BE5\u503C\u4F1A\u8D4B\u7ED9g-&gt;seed. \u5728\u65B0\u5EFA\u72B6\u6001\u673A\u65F6\u4EA7\u751F. \u6574\u4E2A\u8FD0\u884C\u8FC7\u7A0B\u4E2D\u4E0D\u4F1A\u518D\u6539\u53D8</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">time.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luai_makeseed</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">(NULL))</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Compute an initial seed as random as possible. Rely on Address Space</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">** Layout Randomization (if present) to increase randomness..</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addbuff</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> \\</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> t </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">\\</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">memcpy</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">));</span><span style="color:#F07178;"> p </span><span style="color:#89DDFF;">+=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">t</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">makeseed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">lua_State </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">char</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">buff</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#C792EA;">size_t</span><span style="color:#89DDFF;">)];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">luai_makeseed</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> p </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">addbuff</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* heap variable */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">addbuff</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* local variable */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">addbuff</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> luaO_nilobject</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* global variable */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">addbuff</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">lua_newstate</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* public function */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">lua_assert</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">p </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">luaS_hash</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">buff</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> p</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaS_hash</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> l</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> seed</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> seed </span><span style="color:#89DDFF;">^</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> l1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> step </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> LUAI_HASHLIMIT</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l1 </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> l1 </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> step</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> l1 </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> step</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> h </span><span style="color:#89DDFF;">^</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast_byte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">l1 </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u5BF9string\u505Ahash\u8BA1\u7B97\u65F6, \u5E76\u6CA1\u6709\u5BF9\u6BCF\u4E2A\u5B57\u7B26\u8FDB\u884C\u8BA1\u7B97, \u81F3\u591A\u4F1A\u5BF9\u5176\u4E2D\u7684 2^5 \u4E2A\u5B57\u7B26\u8FDB\u884C\u8BA1\u7B97</p><div class="language-c"><span class="copy"></span><pre><code><span class="line"><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">luaS_hash</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">size_t</span><span style="color:#A6ACCD;"> l</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">unsigned</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> seed</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> seed </span><span style="color:#89DDFF;">^</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">unsigned</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> l1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">size_t</span><span style="color:#F07178;"> step </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l </span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F07178;"> LUAI_HASHLIMIT</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">       </span><span style="color:#676E95;font-style:italic;">/* LUAI_HASHLIMIT \u9ED8\u8BA4\u662F 5 */</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">l1 </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> l</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> l1 </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> step</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> l1 </span><span style="color:#89DDFF;">-=</span><span style="color:#F07178;"> step</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">    h </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> h </span><span style="color:#89DDFF;">^</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">((</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">h</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">cast_byte</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">l1 </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> h</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>init\u548Cbool\u7C7B\u578B,\u5305\u62EC\u6307\u9488(\u53EF\u8F6C\u6362\u4E3A\u6574\u6570)\u76F4\u63A5\u4F7F\u7528\u503C\u4E3Ahash\u503C</p><p>Lua\u4E2D\u7684table\u4E0D\u4EC5\u652F\u6301\u952E\u503C\u5BF9\u8FD9\u6837\u7684\u7ED3\u6784,\u8FD8\u652F\u6301\u4EE5\u7D22\u5F15\u503C\u6765\u8BBF\u95EE\u7684\u6570\u7EC4. \u53EF\u4EE5\u8BF4\u5C06\u4E24\u8005\u5408\u4E8C\u4E3A1. \u5C11\u4E86\u4E00\u4E2A\u6570\u636E\u7ED3\u6784,\u4F46\u529F\u80FD\u4E0A\u4ECD\u4E00\u6837. \u54C8\u5E0C\u8868\u4E3B\u8981\u662F\u57FA\u4E8E\u5F00\u653E\u5730\u5740, \u8FD9\u6837\u6240\u6709\u6570\u636E\u90FD\u5728\u8FDE\u7EED\u6392\u5728\u4E00\u8D77, \u907F\u514D\u5185\u5B58\u788E\u5316. \u5185\u5B58\u6548\u7387\u9AD8</p>`,22),t=[o];function e(c,r,y,F,D,A){return a(),n("div",null,t)}var f=s(p,[["render",e]]);export{C as __pageData,f as default};
